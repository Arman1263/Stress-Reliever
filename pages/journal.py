import streamlit as st
import pandas as pd
from datetime import datetime
from utils.gemini_api import generate_journal_prompt
from utils.auth import save_user_data, get_user_data

def show_journal():
    """
    Display the digital diary and journaling system
    """
    st.title("📝 Digital Journal")
    
    # Get user data
    username = st.session_state.user
    journal_entries = get_user_data(username, 'journal')
    
    # Create tabs for different journal functions
    tab1, tab2, tab3 = st.tabs(["Write New Entry", "View Previous Entries", "Guided Journaling"])
    
    with tab1:
        st.subheader("Create a New Journal Entry")
        
        col1, col2 = st.columns([3, 1])
        
        with col1:
            # Journal entry form
            today = datetime.now().strftime("%Y-%m-%d")
            date = st.date_input("Date", datetime.now())
            
            # Get AI-generated prompt suggestion
            if 'journal_prompt' not in st.session_state:
                mood_data = get_user_data(username, 'mood')
                current_mood = None
                if mood_data and len(mood_data) > 0:
                    current_mood = mood_data[-1].get('notes', None)
                st.session_state.journal_prompt = generate_journal_prompt(current_mood, journal_entries)
            
            # Display the AI prompt in a special box
            st.markdown(f"""
            <div style="background-color: #2A2A2A; padding: 15px; border-radius: 10px; margin: 10px 0;">
                <h4 style="margin-top: 0; color: #7B68EE;">Writing Prompt</h4>
                <p style="font-style: italic;">{st.session_state.journal_prompt}</p>
                <p style="font-size: 0.8em; color: #98FB98;">✨ Generated by AI to inspire your writing</p>
            </div>
            """, unsafe_allow_html=True)
            
            # Refresh prompt button
            if st.button("Get New Prompt"):
                mood_data = get_user_data(username, 'mood')
                current_mood = None
                if mood_data and len(mood_data) > 0:
                    current_mood = mood_data[-1].get('notes', None)
                st.session_state.journal_prompt = generate_journal_prompt(current_mood, journal_entries)
                st.rerun()
            
            # Entry fields
            title = st.text_input("Title", placeholder="Give your entry a title...")
            content = st.text_area("Write your thoughts...", height=300, 
                                   placeholder="Use the prompt above as inspiration or write freely about whatever is on your mind...")
            
            # Mood tag
            mood_tag = st.select_slider(
                "How are you feeling right now?",
                options=["Very Low", "Low", "Neutral", "Good", "Excellent"],
                value="Neutral"
            )
            
            # Tags
            tags = st.text_input("Tags (comma separated)", 
                                 placeholder="e.g., work, reflection, gratitude")
            
            # Save button
            if st.button("Save Entry", type="primary"):
                if title and content:
                    # Create journal entry
                    entry = {
                        "date": date.strftime("%Y-%m-%d"),
                        "title": title,
                        "content": content,
                        "mood_tag": mood_tag,
                        "tags": tags,
                        "prompt": st.session_state.journal_prompt
                    }
                    
                    # Save to user data
                    save_user_data(username, 'journal', entry)
                    st.success("Your journal entry has been saved!")
                    
                    # Clear the session prompt to get a new one next time
                    if 'journal_prompt' in st.session_state:
                        del st.session_state.journal_prompt
                    
                    # Refresh journal entries
                    journal_entries = get_user_data(username, 'journal')
                    st.rerun()
                else:
                    st.error("Please add a title and some content to your entry.")
        
        with col2:
            st.markdown("""
            <div style="background-color: #2A2A2A; padding: 15px; border-radius: 10px;">
                <h4>Benefits of Journaling</h4>
                <ul style="padding-left: 20px;">
                    <li>Reduces stress and anxiety</li>
                    <li>Improves emotional processing</li>
                    <li>Enhances self-awareness</li>
                    <li>Strengthens memory</li>
                    <li>Supports goal achievement</li>
                </ul>
                <p style="font-style: italic; margin-top: 15px;">Even just 5 minutes of writing can have a positive impact on your wellbeing.</p>
            </div>
            """, unsafe_allow_html=True)
            
            st.markdown("""
            <div style="background-color: #2A2A2A; padding: 15px; border-radius: 10px; margin-top: 15px;">
                <h4>Journaling Tips</h4>
                <ul style="padding-left: 20px;">
                    <li>Write without judgment</li>
                    <li>Don't worry about grammar or spelling</li>
                    <li>Be honest with yourself</li>
                    <li>Try to write regularly</li>
                    <li>Review old entries to see patterns</li>
                </ul>
            </div>
            """, unsafe_allow_html=True)
    
    with tab2:
        st.subheader("Your Journal Entries")
        
        if not journal_entries or len(journal_entries) == 0:
            st.info("You haven't created any journal entries yet. Start writing in the 'Write New Entry' tab.")
        else:
            # Sort entries by date (newest first)
            sorted_entries = sorted(journal_entries, key=lambda x: x['date'], reverse=True)
            
            # Search and filter
            search_col, filter_col = st.columns([2, 1])
            
            with search_col:
                search_term = st.text_input("Search entries", placeholder="Search by title or content...")
            
            with filter_col:
                mood_filter = st.selectbox("Filter by mood", 
                                          ["All Moods", "Very Low", "Low", "Neutral", "Good", "Excellent"])
            
            # Apply filters
            filtered_entries = sorted_entries
            
            if search_term:
                filtered_entries = [entry for entry in filtered_entries if 
                                   search_term.lower() in entry['title'].lower() or 
                                   search_term.lower() in entry['content'].lower()]
            
            if mood_filter != "All Moods":
                filtered_entries = [entry for entry in filtered_entries if 
                                   entry['mood_tag'] == mood_filter]
            
            # Display entries
            if not filtered_entries:
                st.info("No entries match your search or filter criteria.")
            else:
                for i, entry in enumerate(filtered_entries):
                    with st.expander(f"**{entry['date']}**: {entry['title']} ({entry['mood_tag']})"):
                        # Display entry content
                        st.markdown(f"<p style='white-space: pre-line;'>{entry['content']}</p>", unsafe_allow_html=True)
                        
                        # Display meta information
                        col1, col2 = st.columns([1, 1])
                        
                        with col1:
                            if entry.get('prompt'):
                                st.markdown(f"**Prompt used:** _{entry['prompt']}_")
                        
                        with col2:
                            if entry.get('tags'):
                                tags_list = [tag.strip() for tag in entry['tags'].split(',') if tag.strip()]
                                tags_html = ' '.join([f'<span style="background-color: #1A1A1A; padding: 2px 8px; border-radius: 10px; margin-right: 5px; font-size: 0.8em;">{tag}</span>' for tag in tags_list])
                                st.markdown(f"**Tags:** {tags_html}", unsafe_allow_html=True)
    
    with tab3:
        st.subheader("Guided Journaling Exercises")
        
        # Guided journaling cards
        col1, col2 = st.columns(2)
        
        with col1:
            st.markdown("""
            <div style="background-color: #2A2A2A; padding: 20px; border-radius: 10px; height: 340px;">
                <h3 style="color: #7B68EE;">Gratitude Practice</h3>
                <p>Regularly writing about gratitude has been shown to increase positivity and reduce stress.</p>
                <h4>Today's Exercise:</h4>
                <ol>
                    <li>List three things you're grateful for today.</li>
                    <li>Choose one and explain why it's meaningful to you.</li>
                    <li>How does this gratitude connect to your larger life values?</li>
                </ol>
                <div style="margin-top: 20px;">
                    <button style="background-color: #7B68EE; color: white; border: none; padding: 8px 15px; border-radius: 5px; cursor: pointer;">Start Writing</button>
                </div>
            </div>
            """, unsafe_allow_html=True)
            
            st.markdown("""
            <div style="background-color: #2A2A2A; padding: 20px; border-radius: 10px; margin-top: 20px; height: 340px;">
                <h3 style="color: #7B68EE;">Stress Release</h3>
                <p>Writing about stressors can help process emotions and reduce their impact.</p>
                <h4>Today's Exercise:</h4>
                <ol>
                    <li>Identify something causing you stress right now.</li>
                    <li>Describe the physical sensations associated with this stress.</li>
                    <li>What is one small action you could take to address or reduce this stress?</li>
                    <li>How might you view this situation differently in a week?</li>
                </ol>
                <div style="margin-top: 20px;">
                    <button style="background-color: #7B68EE; color: white; border: none; padding: 8px 15px; border-radius: 5px; cursor: pointer;">Start Writing</button>
                </div>
            </div>
            """, unsafe_allow_html=True)
        
        with col2:
            st.markdown("""
            <div style="background-color: #2A2A2A; padding: 20px; border-radius: 10px; height: 340px;">
                <h3 style="color: #7B68EE;">Reflection & Growth</h3>
                <p>Looking back on experiences helps us extract lessons and recognize personal growth.</p>
                <h4>Today's Exercise:</h4>
                <ol>
                    <li>Describe a recent challenge you faced.</li>
                    <li>What strengths did you use to address this challenge?</li>
                    <li>What did you learn about yourself?</li>
                    <li>How might this learning help you in the future?</li>
                </ol>
                <div style="margin-top: 20px;">
                    <button style="background-color: #7B68EE; color: white; border: none; padding: 8px 15px; border-radius: 5px; cursor: pointer;">Start Writing</button>
                </div>
            </div>
            """, unsafe_allow_html=True)
            
            st.markdown("""
            <div style="background-color: #2A2A2A; padding: 20px; border-radius: 10px; margin-top: 20px; height: 340px;">
                <h3 style="color: #7B68EE;">Future Visioning</h3>
                <p>Writing about your ideal future can increase motivation and clarify goals.</p>
                <h4>Today's Exercise:</h4>
                <ol>
                    <li>Imagine your life one year from now if everything goes well.</li>
                    <li>Describe in detail: What are you doing? How do you feel? Who is with you?</li>
                    <li>What small steps could you take in the next week to move toward this vision?</li>
                    <li>What potential obstacles might arise, and how could you address them?</li>
                </ol>
                <div style="margin-top: 20px;">
                    <button style="background-color: #7B68EE; color: white; border: none; padding: 8px 15px; border-radius: 5px; cursor: pointer;">Start Writing</button>
                </div>
            </div>
            """, unsafe_allow_html=True)
